<!-- Page for displaying list of course scores based on a search for a faculty -->
<!DOCTYPE html>
<html lang="en">

<head>
	<title>Grand Valley State University Admin Page</title>
	<meta charset="utf-8"> 
	<meta name="viewport" content="width=device-width, initial-scale=1"> 
	<link rel="icon" href="favicon.ico"> 
	<link rel="stylesheet" href="styles/style.css">
</head>

<body>
	<main class="content">
		<!-- <button  class= "right" type="button" onclick="alert('You have successfully logged out. You may now close this window.')">Logout</button> -->
				
		<div class="wrapper">
			
			<!--header image-->
			<header> 
			</header>
			 
			<h1 class="center">GVSU School of Computing Course Listing</h1> 

			<nav>		
				<ul>
					<li class="center">  	
						<!--Nav bar-->
							<a class="btn btn-primary" href="/facultySearch">Search by Professor</a> 
							<a class="btn btn-primary" href="/courseSearch">Search by Course</a> 
							<a class="btn btn-primary" href="/courses">Course List</a>
							<a class="btn btn-primary" href="/users">Faculty List</a>
					</li>
				</ul>		
			</nav> 

			<p class="center"> Ranking Key: 0 = default, 1 = teach in more than a year, 2 = teach in less than 6 months, 3 = teach right away
			</br> Desire Key: 0 = can't teach, 1 = don't want to teach , 2 = somewhat would love to teach, 3 = would love to teach</p>
	
			
			<div class="'input-group">
				<ul>
					<li>
						<div>
							<select id="select">
								<!--iterate through list of faculty to list the faculty-->
								<% users.forEach(user => { %>
									<option id="<%= user.userID %>"><%=user.lName %>, <%= user.fName %></option>
								<% }); %>
							</select>
						</div>
					</li>
				</ul>	
			</div>
	
						
				<table id="dataTable"><!--Starting Table--> 
			
					<tr><!--Row 1 -->
						<th>Course Name</th>
						<th onclick="sortTable(0)">Ranking</th>
						<th onclick="sortTable(0)">Desire</th>
						<th>Notes</th> 
					</tr>	
					
					<!-- iterate through list of users and print scores for each -->
					<tbody>
						<% scores.forEach(score => { %>
							<tr>
								<td><%= score.courseID %></td>
								<td><%= score.ranking %></td>
								<td><%= score.desire %></td>
								<td><%= score.notes %></td>
							</tr> 	
						<% }); %> <!-- end for loop -->
					</tbody>
				</table>
		</div>
	</main>
</body>

   <!--Bootstrap Imports-->
   <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
   <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script> 

   <script>
		const selectElem = document.getElementById("select");

		selectElem.addEventListener("change", () => {
			//[TODO] change selectedindex to redirected index
			const index = selectElem.selectedIndex + 1;
			window.location.href = "/facultySearch/" + index;
		});

		function setFaculty(dropdown, id) {
			for (let i = 0; i < dropdown.options.length; i++) {
				if (dropdown.options[i].id == id) {
					dropdown.options[i].selected = true;
					return;
				}
			}
		}
		//setFaculty(document.getElementById('select'),


		//rules for sortable table for ranking and desire
		function sortTable(n) {
				var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
				table = document.getElementById("dataTable");
				switching = true;
				//Set the sorting direction to ascending:
				dir = "asc"; 
				/*Make a loop that will continue until
				no switching has been done:*/
				while (switching) {
					//start by saying: no switching is done:
					switching = false;
					rows = table.rows;
					/*Loop through all table rows (except the
					first, which contains table headers):*/
					for (i = 1; i < (rows.length - 1); i++) {
					//start by saying there should be no switching:
					shouldSwitch = false;
					/*Get the two elements you want to compare,
					one from current row and one from the next:*/
					x = rows[i].getElementsByTagName("td")[n];
					y = rows[i + 1].getElementsByTagName("td")[n];
					 /*check if the two rows should switch place,
					based on the direction, asc or desc:*/
					if (dir == "asc") {
						if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
						//if so, mark as a switch and break the loop:
						shouldSwitch= true;
						break;
						}
					} else if (dir == "desc") {
						if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
						//if so, mark as a switch and break the loop:
						shouldSwitch = true;
						break;
						}
					}
					}
					if (shouldSwitch) {
					/*If a switch has been marked, make the switch
					and mark that a switch has been done:*/
					rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
					switching = true;
					//Each time a switch is done, increase this count by 1:
					switchcount ++;      
					} else {
					/*If no switching has been done AND the direction is "asc",
					set the direction to "desc" and run the while loop again.*/
					if (switchcount == 0 && dir == "asc") {
						dir = "desc";
						switching = true;
					}
					}
				}
				}
   </script>

   <style>
	/* CSS Reset */
	body, header, main, img, h1, caption, td, th, tr, table, button {
	margin: 0; padding: 0; border: 0;
	}


	/*Styles for All Pages */
	body {
	height: 100%;
	margin: 5em;
	padding: 3em 0;
	display: grid;
	align-items: center;
	background-color: #F5F5F5;
	font-family: 'Quicksand', sans-serif;
	}

	h1, caption { 
	padding: 1em;
	color: #0032A0;
	font-family: 'Quicksand', sans-serif;	
	}

	h1 {
	size: .5em;
	}


	/*Styles for Login Page */
	#main-holder {
	width: 55%;
	height: 150%;

	margin: auto;
	display: grid;
	justify-items: center;
	align-items: center;
	background-color: white;
	border-radius: 7px;
	}

	#login-form {
	align-self: flex-start;
	display: grid;
	justify-items: center;
	align-items: center;
	}

	.login-form-field {
	margin-bottom: 10px;
	border-radius: 3px;
	border: 1px solid black;
	padding: 5%;
	}

	#login-form-submit {
	width: 100%;
	padding: 7px;
	border: none;
	border-radius: 5px;
	color: black;
	font-weight: bold;
	background-color: #90ee90;
	cursor: pointer;
	outline: none;
	}


	/* Style for Faculty and Admin Page */
	img {
	max-width: 30%
	}  
	
	.content p {
	border: 8px solid; 
	border-color: #b0c4de; 
	border-radius: 10px; 
	padding: 1em; 
	margin: 2em; 
	font-size: 1.25em; 
	text-align: center;
	}

	/*centering the banner and center command*/
	.center {
	display: block;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	} 

	/*centering the page and creating a width for page*/
	.wrapper {
	width: 90%;
	margin-left: auto;
	margin-right: auto;
	}

	/*Button*/
	button{
	text-align: right; 
	}

	/*button itself*/
	.dropbtn {  
	background-color: #FFF0F5; 
	font-size: 16px;
	border: none;
	}
	/*centering dropdown*/
	.dropdown { 
	position: relative;
	display: inline-block;
	}

	/*content inside the dropdown*/
	.dropdown-content { 
	display: none;
	position: absolute;
	background-color: #FFFFFF;
	min-width: 200px; 
	}
	.dropdown-content a { 
	color: black;
	padding: 12px 16px;
	text-decoration: none;
	display: block;
	}

	.left{
	display: block;
	float: left;
	}

	.right {
	display: block;
	float: right;
	}

	/*Table Designing*/ 
	table {
	border: 1px solid #000; 
	border-collapse: collapse;
	margin: 0 auto; 
	width: 98%;
	text-align: center;	  
	font-family: 'Quicksand', sans-serif; 
	}

	caption {
	font-size: 1.8em; 
	font-weight: bold;  
	}

	td {
	padding: 1em; 
	font-size: 1em; 
	text-align: center;
	}

	th, td {
	border: 0.1em solid #0033A0; 
	}

	th {
	background-color: #b0c4de; 
	font-family: 'Quicksand', sans-serif;	
	color: #000; 
	font-size: 1.25em; 
	text-align: center; 
	padding: 1.15em;
	}

	tr {
	background-color: #fff;
	}

	li{
	padding: 0;
	margin: 0;
	}

	.errorCodeH1 {
	Text-align: center;
	Font-size: 200px;
	Font-weight: bold;
	}
	
	.errorCodeH2 {
	Text-align: center;
	Font-size: 75px;
	}
	
	.errorCodeP {
	Text-align: center;
	Font-size: 30px;
	}

</style>

</html>
